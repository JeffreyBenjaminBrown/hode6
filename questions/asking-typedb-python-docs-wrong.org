* response
Thanks!

I'm running TypeDB from the Docker image that you provide:
https://hub.docker.com/layers/vaticle/typedb/latest/images/sha256-b62f455c89fb1a31ee7c1ec0af9f2b5ed452a6507b594f7447b5df9f2f92313f

From there if I run `pip install typedb-driver` I get a `can't find it` error:
```

root@26f767b4e868:/opt/typedb-all-linux-x86_64# pip install typedb-driver
ERROR: Could not find a version that satisfies the requirement typedb-driver (from versions: none)
ERROR: No matching distribution found for typedb-driver
root@26f767b4e868:/opt/typedb-all-linux-x86_64#
```

I'm guessing the problem might be that the Docker image you provide uses a four-year-old version of Ubuntu:
```
root@26f767b4e868:/opt/typedb-all-linux-x86_64# cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=20.04
DISTRIB_CODENAME=focal
DISTRIB_DESCRIPTION="Ubuntu 20.04.6 LTS"
```
for which the latest version of Python is 3.8, and that typedb-driver is only available for more recent versions of Python. I tried to rebuild the Docker image myself from a more recent version of Ubuntu, but I haven't found the Dockerfile. You don't seem to have a Docker image repo on Github. Do you publish that anywhere, or is it a secret?
* first
I asked the TypeDB forum this question today (2024 06 27).

# ##########################
# ##########################

Hello,

I'm making one thread out of these two issues because they seem very related.

Everything described below I discovered by running tweaks of the QuickStart script[1] in an iPython shell from within the TypeDB docker container (called "vaticle/typedb", with image ID 0f332410e5cb, up to date according to DockerHub as of today).

# Some obsolete documentation

The first instruction at the Overview[1] of the Python driver is to run `pip install typedb-driver`. That package is no longer in PyPi, but `typedb-client` is, so I installed the latter.

The QuickStart goes on to suggest some code, starting with `from typedb.driver import TypeDB, SessionType, TransactionType`. That module does not exist, but `typedb.client` does, and those types are all available within it.

Once I replaced every instance of the string "driver" to "client" (the two important targets being the module `typedb.driver` and the object `TypeDB.core_driver`), I was able to execute the script -- which uncovered the second issue.

# Version mismatch

Running that QuickStart code resulted in an error, the money quote from which appears to be the following:
```
_InactiveRpcError: <_InactiveRpcError of RPC that terminated with:
        status = StatusCode.INTERNAL
        details = "[SRV26] Invalid Server Operation: A protocol version mismat
ch was detected. This server supports version '3' but the driver supports vers
ion '1'. Please use a compatible driver to connect.
```

[1] https://typedb.com/docs/drivers/python/overview
